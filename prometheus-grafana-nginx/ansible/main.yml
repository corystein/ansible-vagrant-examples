---
# Ansible playbook for an Prometheus server.
#
# @author Cory Stein (2019).

- name: Install Node-Exporter
  hosts: all
  roles:
    - cloudalchemy.node-exporter
    - cloudalchemy.snmp-exporter
  tags:
    - node-exporter
    - snmp-exporter

- name: Install Prometheus
  hosts: prometheus
  roles:
    - cloudalchemy.prometheus
  tags:
    - prometheus

- name: Install Grafana
  hosts: grafana
  roles:
    - cloudalchemy.grafana
  tags:
    - grafana

- name: Generate Self-Signed Certificate
  hosts: all
  tasks:
    - name: Install PIP
      shell: |
        curl "https://bootstrap.pypa.io/get-pip.py" -o "get-pip.py"
        python get-pip.py
      args:
        creates: get-pip.py
    - name: Install pyOpenSSL
      pip:
        name: pyOpenSSL
        state: present
    - name: Create CSR and KEY
      shell: |
        openssl req -new -newkey rsa:2048 -nodes -keyout "{{ cert_key_file }}" -out "{{ cert_csr_file }}" -subj "/C=US/ST=Florida/L=Tampa/O=PwC US LLP/OU=PwCLabs/CN={{ CN }}"
      args:
        creates: "{{ cert_csr_file }}"
    - name: Create Certificate
      openssl_certificate:
        path: "{{ cert_file }}"
        privatekey_path: "{{ cert_key_file }}"
        csr_path: "{{ cert_csr_file }}"
        provider: selfsigned
        subject_alt_name:
          - "{{ CN }}"
          - "{{ ansible_host }}"
          - 127.0.0.1

    - name: Ensure that the existing certificate can be used for client authentication
      openssl_certificate:
        path: "{{ cert_file }}"
        provider: assertonly
        extended_key_usage:
          - serverAuth
          - clientAuth
          - 1.3.6.1.5.5.7.3.8
        extended_key_usage_strict: true

- name: Install Nginx
  hosts: all
  roles:
    - geerlingguy.nginx
  tags:
    - nginx
  # tasks:
  #   - debug:
  #       msg: "{{lookup('file', '/etc/nginx/conf.d/prometheus.conf') }}"
  # - name: display multiple file contents
  #   debug: var=item
  #   with_file:
  #     - "/etc/nginx/conf.d/default.conf"
